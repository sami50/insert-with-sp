//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Webwithsp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ssEntities : DbContext
    {
        public ssEntities()
            : base("name=ssEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<product> products { get; set; }
    
        public virtual int one(Nullable<int> id, Nullable<int> neworderquantity, ObjectParameter previousorderquantity, ObjectParameter previousavquantity)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var neworderquantityParameter = neworderquantity.HasValue ?
                new ObjectParameter("neworderquantity", neworderquantity) :
                new ObjectParameter("neworderquantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("one", idParameter, neworderquantityParameter, previousorderquantity, previousavquantity);
        }
    
        public virtual int one1(Nullable<int> id, Nullable<int> neworderquantity, ObjectParameter previousorderquantity, ObjectParameter previousavquantity)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var neworderquantityParameter = neworderquantity.HasValue ?
                new ObjectParameter("neworderquantity", neworderquantity) :
                new ObjectParameter("neworderquantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("one1", idParameter, neworderquantityParameter, previousorderquantity, previousavquantity);
        }
    }
}
